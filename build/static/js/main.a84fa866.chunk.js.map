{"version":3,"sources":["components/Header/Header.js","components/Posts/Posts.js","components/Comments/Comments.js","components/PostDetails/PostDetails.js","components/notFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","style","textDecoration","to","Button","backgroundColor","maxWidth","media","height","Posts","useContext","PostContext","posts","setPosts","useEffect","fetch","then","res","json","data","Post","map","post","id","body","marginTop","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","width","margin","padding","borderRadius","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","Comments","props","React","useState","expanded","setExpanded","comment","name","email","image","CardHeader","Avatar","src","alt","action","subheader","disableSpacing","clsx","onClick","aria-expanded","PostDetails","postId","useParams","setPost","comments","setComments","url","i","length","random","Math","floor","icon","faCommentAlt","NotFound","textAlign","createContext","App","Provider","value","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a84fa866.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Bayzid\r\n          </Typography>\r\n          <Link style={{textDecoration:'none'}} to=\"/\">\r\n          <Button style={{backgroundColor:'#00CED1',color:'black'}}>All Posts</Button>\r\n          </Link>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { PostContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 1050,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst Posts = () => {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useContext(PostContext)\r\n    useEffect(() => {\r\n        const url = 'https://jsonplaceholder.typicode.com/posts';\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setPosts(data))\r\n    }, [])\r\n    const Post = posts.map(post => {\r\n        const { id, title, body } = post;\r\n        return (\r\n            <div style={{ marginTop: '20px' }}>\r\n                <Card className={classes.root}>\r\n                    <CardActionArea style={{backgroundColor:'#87CEFA'}}>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {body}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions style={{backgroundColor:'#87CEFA'}}>\r\n                        <Link style={{textDecoration:'none'}} to={`/post/${id}`}>\r\n                            <Button  style={{backgroundColor: 'midnightblue',color:'#fff'}}>\r\n                                Post Details\r\n                            </Button>\r\n                        </Link>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div style={{ width: '50%', margin: 'auto' }}>\r\n            <div style={{ width: '100%', backgroundColor: '#00CED1', padding: '10px 20px', marginTop: '20px', borderRadius: '5px' }}>\r\n                <h3>All  Posts : </h3>\r\n            </div>\r\n            {Post}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth:960,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const {comment} = props;\r\n\r\n    const {name,body,email,image} = comment;\r\n\r\n    return (\r\n        <div style={{marginTop: '10px',marginLeft: '120px'}}>\r\n            <Card className={classes.root} style={{backgroundColor:'#B0E0E6'}}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                            <img src={image} width=\"100%\" alt=\"nai\"/>\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title={name}\r\n                    subheader={`Email : ${email}`}\r\n\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {body}\r\n        </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Comments from '../Comments/Comments';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 1050,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\nconst PostDetails = () => {\r\n    const { postId } = useParams();\r\n    const [post, setPost] = useState({});\r\n    const [comments,setComments] = useState([]);\r\n    useEffect(() => {\r\n        const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(posts => setPost(posts))\r\n    }, []);\r\n    useEffect(()=>{\r\n        const url = `https://jsonplaceholder.typicode.com/comments?postId=${postId}`;\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(comments => setComments(comments))\r\n    },[])\r\n\r\n    const { id, title, body } = post;\r\n    const classes = useStyles();\r\n\r\n    for(let i = 0; i<comments.length ;i++){\r\n        const random = Math.floor(Math.random() * 90 + 1);\r\n        comments[i].image = `https://randomuser.me/api/portraits/women/${random}.jpg`;\r\n    }\r\n    return (\r\n        <div style={{ width: '60%', margin: 'auto' }}>\r\n            <div style={{ width:'92%',backgroundColor:'#00CED1',padding:'10px 20px',marginTop:'20px',borderRadius:'5px'}}>\r\n                <h3>Post Details : </h3>\r\n            </div>\r\n            <div style={{ marginTop: '20px'}}>\r\n                <Card className={classes.root}>\r\n                    <CardActionArea style={{backgroundColor: '#87CEFA',padding:'20px 0px 100px 20px'}}>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <h2> {title}</h2>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {body}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions style={{backgroundColor: '#87CEFA',padding:'0px 0px 10px 40px',color:'#696969'}}>\r\n                        <FontAwesomeIcon icon={faCommentAlt} />-{comments.length}\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n\r\n            <div style={{width:'80%'}}>\r\n                \r\n                {\r\n                    comments.map(comment => <Comments comment={comment}></Comments>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div style={{width:'50%',margin:'auto',textAlign:'center',padding:'100px 0px'}}>\r\n            <h3>Page not found</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { createContext, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Header from './components/Header/Header';\r\nimport Posts from './components/Posts/Posts';\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\nimport NotFound from './components/notFound/NotFound';\r\nexport const PostContext = createContext();\r\n\r\nfunction App() {\r\n  const [posts,setPosts] = useState([]);\r\n  return (\r\n    <div style={{backgroundColor:'#A9A9A9'}}>\r\n      <PostContext.Provider value={[posts,setPosts]}>\r\n       <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Header></Header>\r\n            <Posts></Posts>\r\n          </Route>\r\n          <Route exact path=\"/post/:postId\">\r\n            <Header></Header>\r\n            <PostDetails></PostDetails>\r\n          </Route>\r\n          <Route exact path=\"*\">\r\n            <NotFound></NotFound>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </PostContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}